# -*- coding: utf-8 -*-
"""wasteinnova.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jl_XlJVEvRiVBeLAZ3L_JM2PaT9p1tY7
"""

import pandas as pd
import numpy as np
import seaborn as sns

data=pd.xls = pd.ExcelFile('/content/WASTINNOVA DATA.xlsx')

df1=pd.read_excel(data,"HOUSEHOLD")
df2=pd.read_excel(data,"COMMERCIAL")
df3=pd.read_excel(data,"OTHERS")

df1.head()

df1.corr()

from sklearn import preprocessing
min_max_scaler = preprocessing.MinMaxScaler(feature_range =(0, 1))

df1.iloc[:, 1:2].values

x1=min_max_scaler.fit_transform(df1.iloc[:, 1:2].values)
x1

df1["monthly income"]=x1
df1.head()

remove=["daily solid waste generation(in kg)"]
X=df1.drop(remove,axis=1)

y=df1["daily solid waste generation(in kg)"]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)
print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)

from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(X,y)

test_data_Y=lr.predict(X_test)
test_data_Y

from sklearn import metrics
mse=metrics.mean_absolute_error(y_test,test_data_Y)

print(mse)
from math import *
rmse=sqrt(mse)
print(rmse)

df2.head()

df2=pd.get_dummies(df2)

df2.corr()

remove=["daily solid waste generation(in kg)"]
X2=df2.drop(remove,axis=1)
X2

y2=df2["daily solid waste generation(in kg)"]

from sklearn.model_selection import train_test_split
X2_train, X2_test, y2_train, y2_test = train_test_split(X2, y2, test_size=0.33)
print(X2_train.shape, X2_test.shape, y2_train.shape, y2_test.shape)

X2_test=pd.get_dummies(X2_test)

from sklearn.linear_model import LinearRegression
lr2 = LinearRegression()
lr2.fit(X2,y2)

test_data_Y2=lr2.predict(X2_test)
test_data_Y2

df3.head()

df3.corr()

remove=["daily solid waste generation(in kg)"]
X3=df3.drop(remove,axis=1)

y3=df3["daily solid waste generation(in kg)"]

from sklearn.model_selection import train_test_split
X3_train, X3_test, y3_train, y3_test = train_test_split(X3, y3, test_size=0.33)
print(X3_train.shape, X3_test.shape, y3_train.shape, y3_test.shape)

from sklearn.linear_model import LinearRegression
lr3 = LinearRegression()
lr3.fit(X3,y3)

test_data_Y3=lr3.predict(X3_test)
test_data_Y3

import pickle

pickle.dump(lr,open("model1.pkl","wb"))
pickle.dump(lr,open("model2.pkl","wb"))
pickle.dump(lr,open("model3.pkl","wb"))

